#include<stdio.h>
#include<stdlib.h>
struct node{
	int key;
	struct node *llink;
	struct node *rlink;
};
typedef struct node *nodepointer;
void insert(int value,nodepointer head)
{
	nodepointer temp;
	temp=(nodepointer)malloc(sizeof(struct node));
	temp->key=value;
	temp->llink=head;
	temp->rlink=head->rlink;
	(head->rlink)->llink=temp;
	head->rlink=temp;
	head=temp;
}
void delete(int value,nodepointer head)
{
	if(head==NULL)
	{
		printf("List is empty\n");
		return;
	}
	head=head->rlink;
	if(head->key==-1)
	{
		printf("Cannot delete header node\n");
		return;
	}
	while(head->key!=-1)
	{
		if(head->key==value)
		{
			printf("Element deleted\n");
			if(head->rlink)
				(head->llink)->rlink=head->rlink;
			if(head->llink)
				(head->rlink)->llink=head->llink;
			return;
		}
		head=head->rlink;
	}
	printf("Element not found\n");
}
void displayf(nodepointer head)
{
	head=head->llink;
	if(head==NULL)
	{
		printf("Empty list\n");
		return;
	}
	printf("Forward list is\n");
	while((head->llink)->key!=-1)
	{
		printf("%d\t",head->key);
		head=head->llink;
	}
	if(head->key!=-1)
		printf("%d\n",head->key);
}
void displayr(nodepointer head)
{
	head=head->rlink;
	if(head==NULL)
	{
		printf("Empty list\n");
		return;
	}
	printf("Reverse list is\n");
	while((head->rlink)->key!=-1)
	{
		printf("%d\t",head->key);
		head=head->rlink;
	}
	if(head->key!=-1)
		printf("%d\n",head->key);
}
void main()
{
	nodepointer first;
	int choice,value;
	first=(nodepointer)malloc(sizeof(struct node));
	first->key=-1;
	first->llink=first;
	first->rlink=first;
	while(1)
	{
		printf("Select any operation\n1. Insert\n2. Delete\n3. Display forward\n4. Display reverse\n5. Exit\n");
		scanf("%d",&choice);
		switch(choice)
		{
			case 1:	printf("Enter the value\n");
				scanf("%d",&value);
				insert(value,first);
				break;
			case 2:	printf("Enter element to be deleted\n");
				scanf("%d",&value);
				delete(value,first);
				break;
			case 3: displayf(first);
				break;
			case 4:	displayr(first);
				break;
			case 5:	exit(1);
			default:printf("Invalid choice\n");
		}
	}
}

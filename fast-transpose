#include<stdio.h>
#include<stdlib.h>
#define MAX_TERMS 101
#define MAX_COLS 101
typedef struct{
	int row;
	int col;
	int val;
}terms;
void input(terms a[])
{
	int i,j;
	printf("Enter the number of rows and columns\n");
	scanf("%d%d",&i,&j);
	int x,y,current=1,value;
	printf("Enter the elements\n");
	for(x=0;x<i;x++)
	{
		for(y=0;y<j;y++)
		{
			scanf("%d",&value);
			if(value!=0)
			{
				a[current].row=x;
				a[current].col=y;
				a[current].val=value;
				current++;
			}
		}
	}
	a[0].row=i;
	a[0].col=j;
	a[0].val=current-1;
}
void output(terms k[])
{
	int i;
	printf("Row\tColumn\tValue\n");
	for(i=0;i<=k[0].val;i++)
	{
		printf("%d\t%d\t%d\n",k[i].row,k[i].col,k[i].val);
	}
}
void fast_transpose(terms a[],terms b[])
{
	int row_terms[100],starting_pos[100];
	int num_cols=a[0].col,num_terms=a[0].val,i,j;
	b[0].col=a[0].row;
	b[0].row=a[0].col;
	b[0].val=a[0].val;
	if(num_terms>0)
	{
		for(i=0;i<num_cols;i++)
			row_terms[i]=0;
		for(i=1;i<=num_terms;i++)
			row_terms[a[i].col]++;
		starting_pos[0]=1;
		for(i=1;i<num_cols;i++)
			starting_pos[i]=starting_pos[i-1]+row_terms[i-1];
		for(i=1;i<=num_terms;i++)
		{
			j=starting_pos[a[i].col]++;
			b[j].col=a[i].row;
			b[j].row=a[i].col;
			b[j].val=a[i].val;
		}
	}
}
void main()
{
	terms a[MAX_TERMS],b[MAX_TERMS];
	input(a);
	output(a);
	fast_transpose(a,b);
	output(b);
}

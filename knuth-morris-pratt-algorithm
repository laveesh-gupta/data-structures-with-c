#include<stdio.h>
#include<stdlib.h>
#include<string.h>
void fail(char *pat,int failure[])
{
	int i,j,n=strlen(pat);
	failure[0]=-1;
	for(j=1;j<n;j++)
	{
		i=failure[j-1];
		while((pat[j]!=pat[i+1]) && (i>=0))
			i=failure[i];
		if(pat[j]==pat[i+1])
			failure[j]=i+1;
		else
			failure[j]=-1;
	}
}
int pmatch(char *str,char *pat,int failure[])
{
	int i=0,j=0;
	int lens=strlen(str);
	int lenp=strlen(pat);
	while(i<lens && j<lenp)
	{
		if(str[i]==pat[j])
		{
			i++;
			j++;
		}
		else if(j==0)
			i++;
		else
			j=failure[j-1]+1;
	}
	return ((j==lenp)?(i-lenp):(-1));
}
void main()
{
	char str[100],pat[100];
	int failure[100];
	printf("Enter the string\n");
	scanf("%s",str);
	printf("Enter the pattern\n");
	scanf("%s",pat);
	fail(pat,failure);
	int i;
	for(i=0;i<strlen(pat);i++)
	{
		printf("%d\t",failure[i]);
	}
	printf("\n");
	printf("Matching position is %d\n",pmatch(str,pat,failure)+1);
}
